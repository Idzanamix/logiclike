import React, { useContext } from "react";
import { useParams } from "react-router-dom";
import { CoursesList } from "../CoursesList";
import { resetCamelCase } from "../../../utils/resetCamelCase";
import { Error } from "../../errorBanners/Error";
import { coursesContext } from "../../context/CoursesContext";

export function CoursesLogic() {
  const { course } = useParams(); // –∏–∑–≤–ª–µ–∫–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ä–æ—É–¥-—Ç—ç–≥
  const {coursesData, loading} = useContext(coursesContext);
  const currentCourse = resetCamelCase(course || '') // –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ Camel Case –≤ –ø—Ä–∏–≤—ã—á–Ω—ã–π —á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç
  const currentCourseData = coursesData.filter(({ tags }) => tags.includes(currentCourse)); // —Ñ–∏–ª—å—Ç—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —Ç–µ–∫—É—â–µ–º—É —Ç–µ–≥—É
  const finalData = course === '–í—Å–µ–¢–µ–º—ã' ? coursesData : currentCourseData;

  return (
    <>
      {finalData.length > 0
        ?
        <CoursesList coursesData={finalData} data-testid="custom-element" />
        :
        loading
          ?
          <Error massage='–ó–∞–≥—Ä—É–∑–∫–∞... üò∏' notError />
          :
          <Error massage='–ö—É—Ä—Å–æ–≤ –ø–æ –¥–∞–Ω–Ω–æ–π —Ç–µ–º–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üòø' />}
    </>
  )
}
